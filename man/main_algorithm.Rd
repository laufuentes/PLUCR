% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main_algorithm.R
\name{main_algorithm}
\alias{main_algorithm}
\title{Main algorithm}
\usage{
main_algorithm(
  X,
  A,
  Y,
  Xi,
  Lambdas = seq(1, 8, by = 1),
  alpha = 0.1,
  precision = 0.05,
  B = c(0.05, 0.1, 0.25, 0.5),
  centered = FALSE,
  Jfold = 3L,
  V = 2L,
  SL.library = c("SL.mean", "SL.glm", "SL.ranger", "SL.grf"),
  tol = 0.025,
  max_iter = 5,
  root.path
)
}
\arguments{
\item{X}{A matrix of covariates of size n x d (input data in \link{0,1}).}

\item{A}{A binary vector of size n indicating treatment assignment (0 or 1).}

\item{Y}{A numeric vector or matrix of length n representing primary outcomes (in \link{0, 1}).}

\item{Xi}{A numeric vector or matrix of length n indicating adverse events (0 or 1).}

\item{Lambdas}{A sequence of non-negative numeric scalars controlling the penalty for violating the constraint (seq(1,8,by=1) by default).}

\item{alpha}{A numeric scalar representing the constraint tolerance (in \link{0,1/2}, 0.1 by default).}

\item{precision}{A numeric scalar defining the desired convergence precision (0.05 by default). The number of Frank-Wolfe iterations (K) is inversely proportional to this value, calculated as 1/precision.}

\item{B}{A vector of non-negative scalars controlling the sharpness of the treatment probability function (c(0.05, 0.1, 0.25, 0.5) by default).}

\item{centered}{A logical value indicating whether to apply centering in \code{sigma_beta} (FALSE by default).}

\item{Jfold}{Number of folds for the main algorithm, needs to be set to 3L.}

\item{V}{Number of folds inside the SuperLearner (2L by default).}

\item{SL.library}{Vector of libraries for training Super Learner (c("SL.mean","SL.glm","SL.ranger","SL.grf") by default).}

\item{tol}{A numeric scalar used as an early stopping criterion based on the RMSE between consecutive solutions (0.025 by default).}

\item{max_iter}{A numeric scalar specifying the maximum number of iterations (5 by default).}

\item{root.path}{Path to the folder where all results are to be saved.}
}
\value{
A list of matrices (\code{theta_0} and \code{theta_final}), or \code{theta_0} alone. These matrices are used to construct the optimal treatment rule in two steps. First, build \code{psi} using the \code{make_psi} function and evaluate it at \code{X} (i.e., \code{psi(X)}). Then, obtain the optimal treatment rule by applying \code{sigma_beta} to the selected \code{beta} attribute (\code{sigma_beta(psi(X), beta)}).
}
\description{
Executes the full estimation pipeline for learning an optimal treatment policy under constraints.
This function performs the complete procedure implemented in the PLUCR framework.
It begins by validating and preprocessing the input data, followed by estimating nuisance parameters using the \code{SuperLearner} ensemble library.
Subsequently, it estimates the optimal treatment policy via the Frank-Wolfe optimization algorithm.
The procedure includes an inner grid search over candidate values of \code{lambda} and \code{beta} to identify the policy
that maximizes the expected primary outcome (policy value) while satisfying a constraint on the expected rate of adverse events.
}
