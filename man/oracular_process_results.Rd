% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process_results.R
\name{oracular_process_results}
\alias{oracular_process_results}
\title{Oracular evaluation of a policy}
\usage{
oracular_process_results(
  theta,
  ncov = 10L,
  scenario_mu = c("Linear", "Threshold", "Mix", "Null", "Constant", "Realistic"),
  scenario_nu = c("Linear", "Threshold", "Mix", "Satisfied", "Realistic"),
  lambda,
  alpha = 0.1,
  beta = 0.05,
  centered = FALSE
)
}
\arguments{
\item{theta}{A numeric matrix (k x d). Each row is from FW inner minimization, used to recover an extremal point for convex function construction.}

\item{ncov}{Number of baseline covariates (at least 2L and 10L by default).}

\item{scenario_mu}{String indicating the type of scenario for delta_Mu ("Linear", "Threshold", "Mix").}

\item{scenario_nu}{String indicating the type of scenario for delta_Nu ("Linear", "Threshold", "Mix").}

\item{lambda}{A non-negative numeric scalar controlling the penalty for violating the constraint.}

\item{alpha}{A numeric scalar representing the constraint tolerance (in \link{0,1/2}, 0.1 by default).}

\item{beta}{A non-negative numeric scalar controlling the sharpness of the probability function.}

\item{centered}{A logical value indicating whether to apply centering in \code{sigma_beta} (FALSE by default).}
}
\value{
A vector of optimized policy parameters (\code{theta}) trained across folds.
}
\description{
This function evaluates the optimal policy derived from \code{theta}. This enables the approximation of the objective
functions: risk, constraint, and the main objective and policy value.
}
