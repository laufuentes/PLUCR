% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process_results.R
\name{process_results}
\alias{process_results}
\title{Evaluate a policy}
\usage{
process_results(
  theta,
  X,
  A,
  Y,
  Xi,
  mu0,
  nu0,
  prop_score,
  lambda,
  alpha,
  beta,
  centered
)
}
\arguments{
\item{theta}{A numeric matrix (k x d). Each row is from FW inner minimization, used to recover an extremal point for convex function construction.}

\item{X}{A matrix of covariates of size n x d (input data).}

\item{A}{A binary vector or matrix of length n indicating treatment assignment (0 or 1).}

\item{Y}{A numeric vector or matrix of length n representing primary outcomes (in \link{0, 1}).}

\item{Xi}{A numeric vector or matrix of length n indicating adverse events (0 or 1).}

\item{mu0}{A fold-specific function predicting primary outcome (Y) given treatment (A) and covariates (X).}

\item{nu0}{A fold-specific function predicting adverse event outcome (Xi) given treatment (A) and covariates (X).}

\item{prop_score}{A function that estimates the propensity score given treatment (A) and covariates (X).}

\item{lambda}{A non-negative numeric scalar controlling the penalty for violating the constraint.}

\item{alpha}{A numeric scalar representing the constraint tolerance (in \link{0,1/2}, 0.1 by default).}

\item{beta}{A non-negative numeric scalar controlling the sharpness of the probability function.}

\item{centered}{A logical value indicating whether to apply centering in \code{sigma_beta} (FALSE by default).}
}
\value{
A vector of optimized policy parameters (\code{theta}) trained across folds.
}
\description{
This function evaluates the optimal policy derived from \code{theta} and gives the upper bound of the constraint estimator.
It updates \code{mu0} and \code{nu0} following the estimation step from the alternating optimization procedure. This enables
targeted estimation of the objective functions: risk, constraint, and the main objective, providing a consistent upper bound
for the constraint estimator.
}
