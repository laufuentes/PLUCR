% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimation.R
\name{estimate_mu}
\alias{estimate_mu}
\title{Estimate mu}
\usage{
estimate_mu(Y, A, X, folds, SL.library, V = 2L, threshold = 0.001)
}
\arguments{
\item{Y}{A numeric vector or matrix of primary outcomes.}

\item{A}{A binary vector indicating treatment assignment.}

\item{X}{A matrix or data frame of covariates.}

\item{SL.library}{Libraries for training learner}

\item{V}{Number of folds (5 by default)}

\item{threshold}{threshold estimations between \link{threshold, 1-threshold}}
}
\value{
A list of functions predicting the expected outcome for treated units or control unis, each one trained without the j-th fold.
}
\description{
This function trains conditional mean of primary outcome models for treated and control groups
using \code{SuperLearner}, applying cross-validation to compute out-of-fold estimates.
}
\examples{
\dontrun{
set.seed(123)
X <- matrix(rnorm(100 * 5), ncol = 5)
A <- stats::rbinom(100, 1, 0.5)
Y <- runif(100)
folds <- folds <- SuperLearner::CVFolds(n, id = NULL,Y = Y, cvControl = SuperLearner::SuperLearner.CV.control(V = JFold, shuffle = TRUE))
SL.library <- c("SL.glm", "SL.mean", "SL.ranger")
mu_functions <- estimate_mu(Y, A, X, folds)
# Apply a function from the list to new data:
mu_functions(1,X[1:5, ],1)  # Predict treated outcomes
}
}
